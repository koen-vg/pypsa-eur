run:
  name: "all"
  scenarios:
    enable: true
    file: "config/scenarios.yaml"
  disable_progressbar: true
  shared_cutouts: true

foresight: "myopic"

scenario:
  ll:
  - c1.5
  clusters:
  - 60
  opts:
  - ""
  sector_opts:
  - "Ca-Ia-Ea"
  - "Cb-Ia-Ea"
  - "Cc-Ia-Ea"
  - "Ca-Ib-Ea"
  - "Cb-Ib-Ea"
  - "Cc-Ib-Ea"
  - "Ca-Ia-Eb"
  - "Cb-Ia-Eb"
  - "Cc-Ia-Eb"
  - "Ca-Ib-Eb"
  - "Cb-Ib-Eb"
  - "Cc-Ib-Eb"
  planning_horizons:
  - 2025
  - 2030
  - 2035
  - 2040
  - 2045
  - 2050
  slack:
  - 0.02
  - 0.05
  - 0.1

near_opt:
  weights:
    varying:
      Link:
        p:
          "H2 Electrolysis": 1
  slack_initial_fraction: 0.75
  obj_bound_scaling_factor: 1e-3

sector_opts:
  C:
    a:
      # Pessimistic CCS scenario
      carbon_capture_cost: 1.5
      sequestration_cost: 30
      seq_2025: 0
      seq_2030: 25
      seq_2035: 75
      seq_2040: 125
      seq_2045: 200
      seq_2050: 275
    b:
      # Middle-of-the-road CCS scenario
      carbon_capture_cost: 1.0
      sequestration_cost: 20
      seq_2025: 0
      seq_2030: 50
      seq_2035: 150
      seq_2040: 250
      seq_2045: 400
      seq_2050: 550
    c:
      # Optimistic CCS scenario
      carbon_capture_cost: 0.9
      sequestration_cost: 15
      seq_2025: 0
      seq_2030: 100
      seq_2035: 300
      seq_2040: 500
      seq_2045: 800
      seq_2050: 1100
  I:
    a:
      # Pessimistic imports
      green_imports_lim: true
    b:
      # Optimistic imports
      green_imports_lim: false
  E:
    a:
      # Pessimistic electrolysis costs
      electrolysis_cost: 1.5
    b:
      # Optimistic electrolysis costs
      electrolysis_cost: 0.5

options_mapping:
  electrolysis_cost:
  - ["adjustments", "sector", "factor", "Link", "H2 Electrolysis", "capital_cost"]
  carbon_capture_cost:
  # The following are all carbon-capture tech carriers in the model
  - ["adjustments", "sector", "factor", "Link", "H2 Electrolysis", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "SMR CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "biomass to liquid CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "BioSNG", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "solid biomass to hydrogen", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "biomass-to-methanol CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "urban central gas CHP CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "biogas to gas CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "urban central solid biomass CHP CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "solid biomass for industry CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "gas for industry CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "process emissions CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "DAC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "lowT industry solid biomass CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "lowT industry methane CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "solid biomass for mediumT industry CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "gas for mediumT industry CC", "capital_cost"]
  - ["adjustments", "sector", "factor", "Link", "gas for highT industry CC", "capital_cost"]
  sequestration_cost:
  - ["sector", "co2_sequestration_cost"]
  seq_2025:
  - ["sector", "co2_sequestration_potential", 2025]
  seq_2030:
  - ["sector", "co2_sequestration_potential", 2030]
  seq_2035:
  - ["sector", "co2_sequestration_potential", 2035]
  seq_2040:
  - ["sector", "co2_sequestration_potential", 2040]
  seq_2045:
  - ["sector", "co2_sequestration_potential", 2045]
  seq_2050:
  - ["sector", "co2_sequestration_potential", 2050]
  green_imports_lim:
  - ["solving", "constraints", "green_imports_lim"]
  

# Country selection: EU-27, excluding Cyprus, Malta, including Norway, UK, Switzerland, and Balkan countries excluding Kosovo (Serbia, Montenegro, Albania, North Macedonia)
countries: ["AL", "AT", "BA", "BE", "BG", "CH", "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GR", "HR", "HU", "IE", "IT", "LT", "LU", "LV", "ME", "MK", "NL", "NO", "PL", "PT", "RO", "RS", "SE", "SI", "SK"]

co2_budget:
  2025: 0.65
  2030: 0.45  # EU target
  2035: 0.275 # Linear interpolation
  2040: 0.1   # EU target
  2045: 0.05  # Linear interpolation
  2050: 0.0   # Net neutrality

costs:
  # Technology data repository version containing green fuel import costs
  version: "koen-vg/technology-data/v0.9.2-2023eur-imports"

clustering:
  temporal:
    resolution_sector: "1500seg"
  build_year_aggregation:
    enable: true
    exclude_carriers:
      # Carriers involved in supplying industrial process heat should
      # not be clustered since they are optimised endogenously and may
      # have to be phased out early (which wouldn't be possible with
      # build year aggregation.)
      # - "lowT industry solid biomass"
      # - "lowT industry solid biomass CC"
      # - "lowT industry methane"
      # - "lowT industry methane CC"
      # - "lowT industry heat pump"
      # - "lowT industry electricity"
      # - "solid biomass for mediumT industry"
      # - "solid biomass for mediumT industry CC"
      # - "gas for mediumT industry"
      # - "gas for mediumT industry CC"
      # - "hydrogen for mediumT industry"
      # - "gas for highT industry"
      # - "gas for highT industry CC"
      # - "hydrogen for highT industry"
      # Excluding the following improves accuracy as efficiency changes over time
      - "H2 Electrolysis"
      - "process emissions CC"

# Use default configuration for which generators to include, except for excluding solar-hsat and geothermal.
electricity:
  extendable_carriers:
    # Extendable renewables are created here, but conventional
    # extendable generation is handled in sector config section.
    # Don't include solar-hsat: just leads to greating solving times.
    Generator: [solar, onwind, offwind-ac, offwind-dc, offwind-float]
    StorageUnit: []
    Store: []
    Link: []

  # Conventional carriers are all added in prepare_sector_network and add_existing_baseyear
  conventional_carriers: [nuclear, oil, OCGT, CCGT, coal, lignite, biomass]
  renewable_carriers: [solar, onwind, offwind-ac, offwind-dc, hydro, offwind-float]

  # This is only used for overnight foresight.
  estimate_renewable_capacities:
    enable: false

sector:
  # For shipping demand exogenous assumptions, see config.default.yaml.
  # Include ammonia sector
  ammonia: true
  # Include both H2 and gas networks
  H2_network: true
  gas_network: true
  # Include the option for allam cycle gas turbines
  allam_cycle: true
  # Allow the use of biomass for biofuel and hydrogen production
  biomass_to_liquid: true
  bioH2: true
  # Allow the use of methanol for power production
  methanol:
    allam: true
    biomass_to_methanol: true
    biomass_to_methanol_cc: true
  # Don't model transmission losses to save on solving time
  transmission_efficiency_enabled: false
  # Disable distribution grids, again speeding up solving times
  electricity_distribution_grid: false
  gas_distribution_grid: false
  # Model heat supply to industry endogenously (allowing process heat from hydrogen)
  industry_t:
    endogen: true
    # The must_run (i.e. p_min_pu) is set to 0 since positive values can lead to infeasibility
    must_run: 0.0
  # Allow expansion of conventional gas power plants, nuclear
  conventional_generation:
    OCGT: "gas"
    nuclear: "uranium"
  # For build year aggregation, need central heating everywhere
  central_heat_everywhere: true
  # For feasibility, need heat vent
  central_heat_vent: true
  # Turn off minimum part load to avoid infeasibility
  min_part_load_fischer_tropsch: 0.
  min_part_load_methanolisation: 0.
  min_part_load_methanation: 0.
  # Transport assumptions
  land_transport_fuel_cell_share:
    2020: 0
    2025: 0
    2030: 0.004 # EU Climate impact study
    2035: 0.039 # Midpoint
    2040: 0.073 # EU Climate impact study
    2045: 0.127 # Midpoint
    2050: 0.180 # EU Climate impact study
  land_transport_electric_share:
    2020: 0
    2025: 0.062 # Midpoint
    2030: 0.123 # EU Climate impact study
    2035: 0.45  # Midpoint               
    2040: 0.493 # EU Climate impact study
    2045: 0.606 # Midpoint               
    2050: 0.719 # EU Climate impact study
  land_transport_ice_share:
    2020: 1
    2025: 0.938
    2030: 0.873
    2035: 0.511
    2040: 0.434
    2045: 0.267
    2050: 0.101
  # Shipping assumptions, from https://www.transportenvironment.org/uploads/files/FuelEU-Maritime-Impact-Assessment.pdf
  shipping_methanol_share:
    2020: 0
    2025: 0.04
    2030: 0.04
    2035: 0.04
    2040: 0.04
    2045: 0.04
    2050: 0.04
  shipping_ammonia_share:
    2020: 0
    2025: 0
    2030: 0
    2035: 0.06
    2040: 0.24
    2045: 0.42
    2050: 0.59
  shipping_gas_share:
    2020: 0
    2025: 0.11
    2030: 0.27
    2035: 0.40
    2040: 0.39
    2045: 0.37
    2050: 0.37
  shipping_oil_share:
    2020: 1
    2025: 0.85
    2030: 0.69
    2035: 0.50
    2040: 0.33
    2045: 0.17
    2050: 0

# In prepare_sector_network, keep the following existing generators. Note: _do not_ include nuclear as this is added back with historical capacities as a link in sector-coupled network.
pypsa_eur:
  Bus:
  - AC
  Link:
  - DC
  Generator:
  - onwind
  - offwind-ac
  - offwind-dc
  - offwind-float
  - solar
  - ror
  StorageUnit:
  - PHS
  - hydro
  Store: []

# Use only ERA5 cutout
atlite:
  default_cutout: europe-era5_2013
  nprocesses: 4
  show_progress: false

renewable:
  # Note: cutouts for renewables are selected in scenarios.yaml
  solar:
    # Since we use ERA5 for solar, apply recommended correction factor
    # (https://github.com/PyPSA/pypsa-eur/pull/304)
    correction_factor: 0.854337
  hydro:
    # Upscale historical total production data (used for
    # normalisation) to current day capacities.
    eia_correct_by_capacity: true
    # Approximate missing historical data
    eia_approximate_missing: true

solving:
  options:
    # Don't use noisy costs; makes solving time inconsistent
    noisy_costs: false
    # Don't model transmission losses to save solving time
    transmission_losses: 0
    # "Curtailment mode" models renewable curtailment with one
    # generator per node and improves solving time.
    curtailment_mode: true

  solver:
    name: "gurobi"
    options: "gurobi"

  solver_options:
    gurobi:
      method: 2
      threads: 10
      NumericFocus: 0
      BarHomogeneous: 0
      return_model: false
      AggFill: 0
      PreDual: 0
      GURO_PAR_BARDENSETHRESH: 200
      crossover: 0
    gurobi-numeric:
      method: 2
      threads: 10
      NumericFocus: 3
      BarHomogeneous: 1
      return_model: false
      BarConvTol: 1.e-4
      FeasibilityTol: 1.e-3
      OptimalityTol: 1.e-3
      AggFill: 0
      PreDual: 0
      GURO_PAR_BARDENSETHRESH: 200
      crossover: 0

  model_options:
    solver_dir: "$SCRATCH"

  # For 100seg/45
  # mem_mb: 3000
  # runtime: 30

  # For 300seg/45
  # mem_mb: 6000
  # runtime: 200

  # For 500seg/45
  # mem_mb: 8000  # typically around 7000
  # runtime: 300  # typically more like 20-30, can be longer due to numerical trouble

  # For 1000seg/45
  # mem_mb: 13000  # typically around 11-12000; some maximisation take more
  # runtime: 200   # typically more like 50, but some runs can take much longer

  # For 1500seg/60
  mem_mb: 40000  # In practice: ~24-25GB, but with spike in the beginning
  runtime: 1000 # Typically more like 150, but some runs take much longer
